openapi: 3.0.1
info:
  title: ESM.Presentation
  version: '1.0'
paths:
  /Auth/change-password:
    patch:
      tags:
        - Auth
      operationId: ChangePassword
      requestBody:
        content:
          application/json-patch+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Auth.Commands.ChangePassword.ChangePasswordCommand'
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Auth.Commands.ChangePassword.ChangePasswordCommand'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Auth.Commands.ChangePassword.ChangePasswordCommand'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Auth.Commands.ChangePassword.ChangePasswordCommand'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
  /Auth/login:
    post:
      tags:
        - Auth
      operationId: Login
      requestBody:
        content:
          application/json-patch+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Auth.Commands.Login.LoginCommand'
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Auth.Commands.Login.LoginCommand'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Auth.Commands.Login.LoginCommand'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Auth.Commands.Login.LoginCommand'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[ESM.Domain.Dtos.GeneratedToken]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[ESM.Domain.Dtos.GeneratedToken]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[ESM.Domain.Dtos.GeneratedToken]'
  /Auth/me:
    get:
      tags:
        - Auth
      operationId: GetMySummaryInfo
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[ESM.Application.Auth.Queries.MySummaryInfo.MySummaryInfoDto]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[ESM.Application.Auth.Queries.MySummaryInfo.MySummaryInfoDto]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[ESM.Application.Auth.Queries.MySummaryInfo.MySummaryInfoDto]'
  /Auth/reset-password:
    patch:
      tags:
        - Auth
      operationId: ResetPassword
      parameters:
        - name: userId
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
  /Department:
    post:
      tags:
        - Department
      operationId: CreateDepartment
      requestBody:
        content:
          application/json-patch+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Departments.Commands.CreateDepartment.CreateDepartmentCommand'
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Departments.Commands.CreateDepartment.CreateDepartmentCommand'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Departments.Commands.CreateDepartment.CreateDepartmentCommand'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Departments.Commands.CreateDepartment.CreateDepartmentCommand'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Guid]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Guid]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Guid]'
  /Department/import:
    post:
      tags:
        - Department
      operationId: ImportDepartment
      requestBody:
        content:
          application/json-patch+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Departments.Commands.ImportDepartment.ImportDepartmentCommand'
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Departments.Commands.ImportDepartment.ImportDepartmentCommand'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Departments.Commands.ImportDepartment.ImportDepartmentCommand'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Departments.Commands.ImportDepartment.ImportDepartmentCommand'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
  '/Department/{departmentId}':
    put:
      tags:
        - Department
      operationId: UpdateDepartment
      parameters:
        - name: departmentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Departments.Commands.UpdateDepartment.UpdateDepartmentCommand'
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Departments.Commands.UpdateDepartment.UpdateDepartmentCommand'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Departments.Commands.UpdateDepartment.UpdateDepartmentCommand'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Departments.Commands.UpdateDepartment.UpdateDepartmentCommand'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
  '/Department/{departmentId}/user':
    post:
      tags:
        - Department
      operationId: CreateUser
      parameters:
        - name: departmentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Departments.Commands.CreateUserInDepartment.CreateUserInDepartmentCommand'
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Departments.Commands.CreateUserInDepartment.CreateUserInDepartmentCommand'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Departments.Commands.CreateUserInDepartment.CreateUserInDepartmentCommand'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Departments.Commands.CreateUserInDepartment.CreateUserInDepartmentCommand'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Guid]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Guid]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Guid]'
  /Examination:
    post:
      tags:
        - Examination
      operationId: CreateExamination
      requestBody:
        content:
          application/json-patch+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Examinations.Commands.Create.CreateCommand'
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Examinations.Commands.Create.CreateCommand'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Examinations.Commands.Create.CreateCommand'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Examinations.Commands.Create.CreateCommand'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Guid]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Guid]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Guid]'
  /Examination/related:
    get:
      tags:
        - Examination
      operationId: GetRelated
      parameters:
        - name: IsActive
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Application.Examinations.Queries.GetRelatedExaminations.RelatedExaminationDto]]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Application.Examinations.Queries.GetRelatedExaminations.RelatedExaminationDto]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Application.Examinations.Queries.GetRelatedExaminations.RelatedExaminationDto]]'
  '/Examination/{examinationId}':
    get:
      tags:
        - Examination
      operationId: GetAllShifts
      parameters:
        - name: examinationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Application.Examinations.Queries.GetAllShifts.GetAllShiftDto]]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Application.Examinations.Queries.GetAllShifts.GetAllShiftDto]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Application.Examinations.Queries.GetAllShifts.GetAllShiftDto]]'
    post:
      tags:
        - Examination
      operationId: ImportExamination
      parameters:
        - name: ExaminationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                File:
                  type: string
                  format: binary
                CreatedAt:
                  type: string
                  format: date-time
            encoding:
              File:
                style: form
              CreatedAt:
                style: form
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
    patch:
      tags:
        - Examination
      operationId: UpdateExamination
      parameters:
        - name: examinationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Examinations.Commands.Update.UpdateCommand'
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Examinations.Commands.Update.UpdateCommand'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Examinations.Commands.Update.UpdateCommand'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Examinations.Commands.Update.UpdateCommand'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
  '/Examination/{examinationId}/events':
    get:
      tags:
        - Examination
      operationId: GetEvents
      parameters:
        - name: examinationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Domain.Entities.ExaminationEvent]]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Domain.Entities.ExaminationEvent]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Domain.Entities.ExaminationEvent]]'
  '/Examination/{examinationId}/handover':
    get:
      tags:
        - Examination
      operationId: GetHandoverData
      parameters:
        - name: examinationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Application.Examinations.Queries.GetHandoverData.HandoverDataDto]]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Application.Examinations.Queries.GetHandoverData.HandoverDataDto]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Application.Examinations.Queries.GetHandoverData.HandoverDataDto]]'
  '/Examination/{examinationId}/shift':
    get:
      tags:
        - Examination
      operationId: GetShifts
      parameters:
        - name: examinationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Application.Examinations.Queries.GetAllShiftsDetails.ShiftDetailsDto]]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Application.Examinations.Queries.GetAllShiftsDetails.ShiftDetailsDto]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Application.Examinations.Queries.GetAllShiftsDetails.ShiftDetailsDto]]'
    patch:
      tags:
        - Examination
      operationId: AssignInvigilatorsToShifts
      parameters:
        - name: examinationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: object
              additionalProperties:
                type: string
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
          text/json:
            schema:
              type: object
              additionalProperties:
                type: string
          application/*+json:
            schema:
              type: object
              additionalProperties:
                type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
  '/Examination/{examinationId}/shift/{shiftId}':
    patch:
      tags:
        - Examination
      operationId: UpdateShiftExamination
      parameters:
        - name: examinationId
          in: path
          required: true
          schema:
            type: string
        - name: shiftId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema: { }
          application/json:
            schema: { }
          text/json:
            schema: { }
          application/*+json:
            schema: { }
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
      deprecated: true
  '/Examination/{examinationId}/shift/calculate':
    post:
      tags:
        - Examination
      operationId: AutoAssignTeachersToShift
      parameters:
        - name: examinationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
  '/Examination/{examinationId}/status':
    post:
      tags:
        - Examination
      operationId: ChangeStatus
      parameters:
        - name: examinationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Examinations.Commands.ChangeStatus.ChangeStatusRequest'
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Examinations.Commands.ChangeStatus.ChangeStatusRequest'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Examinations.Commands.ChangeStatus.ChangeStatusRequest'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Examinations.Commands.ChangeStatus.ChangeStatusRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
  '/Examination/{examinationId}/exams-number':
    patch:
      tags:
        - Examination
      operationId: UpdateExamsCount
      parameters:
        - name: examinationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: object
              additionalProperties:
                type: integer
                format: int32
          application/json:
            schema:
              type: object
              additionalProperties:
                type: integer
                format: int32
          text/json:
            schema:
              type: object
              additionalProperties:
                type: integer
                format: int32
          application/*+json:
            schema:
              type: object
              additionalProperties:
                type: integer
                format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
  '/Examination/{examinationId}/faculty/{facultyId}/group':
    get:
      tags:
        - Examination
      operationId: GetGroupsByFacultyId
      parameters:
        - name: examinationId
          in: path
          required: true
          schema:
            type: string
        - name: facultyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Application.Examinations.Queries.GetGroupsByFacultyId.GetGroupsByFacultyIdDto]]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Application.Examinations.Queries.GetGroupsByFacultyId.GetGroupsByFacultyIdDto]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Application.Examinations.Queries.GetGroupsByFacultyId.GetGroupsByFacultyIdDto]]'
    post:
      tags:
        - Examination
      operationId: UpdateTeacherAssignment
      parameters:
        - name: examinationId
          in: path
          required: true
          schema:
            type: string
        - name: facultyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/ESM.Application.Examinations.Commands.UpdateTeacherAssignment.UpdateTeacherAssignmentDto'
          application/json:
            schema:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/ESM.Application.Examinations.Commands.UpdateTeacherAssignment.UpdateTeacherAssignmentDto'
          text/json:
            schema:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/ESM.Application.Examinations.Commands.UpdateTeacherAssignment.UpdateTeacherAssignmentDto'
          application/*+json:
            schema:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/ESM.Application.Examinations.Commands.UpdateTeacherAssignment.UpdateTeacherAssignmentDto'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
  '/Examination/{examinationId}/faculty/{facultyId}/group/calculate':
    post:
      tags:
        - Examination
      operationId: AutoAssignTeachersToGroups
      parameters:
        - name: examinationId
          in: path
          required: true
          schema:
            type: string
        - name: facultyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
  '/Examination/{examinationId}/group':
    get:
      tags:
        - Examination
      operationId: GetAllGroups
      parameters:
        - name: examinationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Application.Examinations.Queries.GetAllGroups.GetAllGroupsDto]]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Application.Examinations.Queries.GetAllGroups.GetAllGroupsDto]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Application.Examinations.Queries.GetAllGroups.GetAllGroupsDto]]'
  '/Examination/{examinationId}/group/calculate':
    post:
      tags:
        - Examination
      operationId: CalculateInvigilatorNumerateOfShiftForEachFaculty
      parameters:
        - name: examinationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
  '/Examination/{examinationId}/group/{groupId}/department/{departmentId}':
    post:
      tags:
        - Examination
      operationId: UpdateTemporaryTeacherToUserIdInDepartmentShiftGroup
      parameters:
        - name: examinationId
          in: path
          required: true
          schema:
            type: string
        - name: groupId
          in: path
          required: true
          schema:
            type: string
        - name: departmentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema: { }
          application/json:
            schema: { }
          text/json:
            schema: { }
          application/*+json:
            schema: { }
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
      deprecated: true
  '/Examination/{examinationId}/group/{groupId}/{facultyId}':
    post:
      tags:
        - Examination
      operationId: AssignInvigilatorNumerateOfShiftToFaculty
      parameters:
        - name: examinationId
          in: path
          required: true
          schema:
            type: string
        - name: groupId
          in: path
          required: true
          schema:
            type: string
        - name: facultyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema: { }
          application/json:
            schema: { }
          text/json:
            schema: { }
          application/*+json:
            schema: { }
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
      deprecated: true
  '/Examination/{examinationId}/invigilator':
    get:
      tags:
        - Examination
      operationId: GetAvailableInvigilatorsInShiftGroup
      parameters:
        - name: examinationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[ESM.Application.Examinations.Queries.GetAvailableInvigilatorsInGroups.GetAvailableInvigilatorsInGroupsDto]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[ESM.Application.Examinations.Queries.GetAvailableInvigilatorsInGroups.GetAvailableInvigilatorsInGroupsDto]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[ESM.Application.Examinations.Queries.GetAvailableInvigilatorsInGroups.GetAvailableInvigilatorsInGroupsDto]'
  '/Examination/{examinationId}/summary':
    get:
      tags:
        - Examination
      operationId: GetSummary
      parameters:
        - name: examinationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[ESM.Domain.Dtos.Examination.ExaminationSummary]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[ESM.Domain.Dtos.Examination.ExaminationSummary]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[ESM.Domain.Dtos.Examination.ExaminationSummary]'
  '/Examination/{examinationId}/temporary':
    get:
      tags:
        - Examination
      operationId: GetTemporaryData
      parameters:
        - name: examinationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Domain.Entities.ExaminationData]]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Domain.Entities.ExaminationData]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Domain.Entities.ExaminationData]]'
  /Faculty:
    get:
      tags:
        - Faculty
      operationId: GetAllFaculty
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Application.Faculties.Queries.GetAll.GetAllDto]]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Application.Faculties.Queries.GetAll.GetAllDto]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Application.Faculties.Queries.GetAll.GetAllDto]]'
    post:
      tags:
        - Faculty
      operationId: CreateFaculty
      requestBody:
        content:
          application/json-patch+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Faculties.Commands.Create.CreateCommand'
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Faculties.Commands.Create.CreateCommand'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Faculties.Commands.Create.CreateCommand'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Faculties.Commands.Create.CreateCommand'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[ESM.Domain.Dtos.Faculty.FacultySummary]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[ESM.Domain.Dtos.Faculty.FacultySummary]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[ESM.Domain.Dtos.Faculty.FacultySummary]'
  '/Faculty/{facultyId}':
    put:
      tags:
        - Faculty
      operationId: UpdateFaculty
      parameters:
        - name: facultyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Faculties.Commands.Update.UpdateRequest'
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Faculties.Commands.Update.UpdateRequest'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Faculties.Commands.Update.UpdateRequest'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Faculties.Commands.Update.UpdateRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
  '/Faculty/{facultyId}/users':
    get:
      tags:
        - Faculty
      operationId: GetUser
      parameters:
        - name: facultyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Domain.Dtos.User.UserSummary]]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Domain.Dtos.User.UserSummary]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Domain.Dtos.User.UserSummary]]'
  '/Faculty/{facultyId}/module':
    post:
      tags:
        - Faculty
      operationId: CreateModuleFaculty
      parameters:
        - name: facultyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema: { }
          application/json:
            schema: { }
          text/json:
            schema: { }
          application/*+json:
            schema: { }
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
      deprecated: true
  '/Group/{groupId}':
    patch:
      tags:
        - Group
      operationId: UpdateTemporaryNameToTeacher
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Groups.Commands.UpdateTemporaryNameToTeacher.UpdateTemporaryNameToTeacherRequest'
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Groups.Commands.UpdateTemporaryNameToTeacher.UpdateTemporaryNameToTeacherRequest'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Groups.Commands.UpdateTemporaryNameToTeacher.UpdateTemporaryNameToTeacherRequest'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Groups.Commands.UpdateTemporaryNameToTeacher.UpdateTemporaryNameToTeacherRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
  '/Group/{groupId}/{facultyId}':
    patch:
      tags:
        - Group
      operationId: AssignInvigilatorsNumberToFaculty
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
        - name: facultyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: integer
              format: int32
          application/json:
            schema:
              type: integer
              format: int32
          text/json:
            schema:
              type: integer
              format: int32
          application/*+json:
            schema:
              type: integer
              format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[ESM.Application.Groups.Commands.AssignInvigilatorsNumberToFaculty.AssignInvigilatorsNumberToFacultyDto]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[ESM.Application.Groups.Commands.AssignInvigilatorsNumberToFaculty.AssignInvigilatorsNumberToFacultyDto]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[ESM.Application.Groups.Commands.AssignInvigilatorsNumberToFaculty.AssignInvigilatorsNumberToFacultyDto]'
  /Module:
    post:
      tags:
        - Module
      operationId: CreateModule
      requestBody:
        content:
          application/json-patch+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Modules.Commands.Create.CreateCommand'
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Modules.Commands.Create.CreateCommand'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Modules.Commands.Create.CreateCommand'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Modules.Commands.Create.CreateCommand'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Guid]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Guid]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Guid]'
  /Module/import:
    post:
      tags:
        - Module
      operationId: ImportExaminationModule
      requestBody:
        content:
          application/json-patch+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Modules.Commands.Import.ImportCommand'
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Modules.Commands.Import.ImportCommand'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Modules.Commands.Import.ImportCommand'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Modules.Commands.Import.ImportCommand'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
  /Room:
    post:
      tags:
        - Room
      operationId: CreateRoom
      requestBody:
        content:
          application/json-patch+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Rooms.Commands.Create.CreateCommand'
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Rooms.Commands.Create.CreateCommand'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Rooms.Commands.Create.CreateCommand'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Rooms.Commands.Create.CreateCommand'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Guid]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Guid]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Guid]'
  /Room/import:
    post:
      tags:
        - Room
      operationId: ImportRoom
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                Files:
                  type: array
                  items:
                    type: string
                    format: binary
            encoding:
              Files:
                style: form
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
  '/Shift/{shiftId}':
    patch:
      tags:
        - Shift
      operationId: UpdateShift
      parameters:
        - name: shiftId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Shifts.Commands.Update.UpdateRequest'
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Shifts.Commands.Update.UpdateRequest'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Shifts.Commands.Update.UpdateRequest'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Shifts.Commands.Update.UpdateRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
  /Teacher:
    get:
      tags:
        - Teacher
      operationId: GetAllTeacher
      parameters:
        - name: IsInvigilator
          in: query
          schema:
            type: boolean
        - name: IsFaculty
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.IEnumerable[ESM.Application.Teachers.Queries.Get.GetDto]]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.IEnumerable[ESM.Application.Teachers.Queries.Get.GetDto]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.IEnumerable[ESM.Application.Teachers.Queries.Get.GetDto]]'
  /Teacher/search:
    get:
      tags:
        - Teacher
      operationId: Search
      parameters:
        - name: FullName
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.IEnumerable[ESM.Domain.Dtos.User.UserSummary]]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.IEnumerable[ESM.Domain.Dtos.User.UserSummary]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Collections.Generic.IEnumerable[ESM.Domain.Dtos.User.UserSummary]]'
  '/Teacher/{teacherId}':
    put:
      tags:
        - Teacher
      operationId: UpdateInfo
      parameters:
        - name: teacherId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Teachers.Commands.Update.UpdateRequest'
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Teachers.Commands.Update.UpdateRequest'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Teachers.Commands.Update.UpdateRequest'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ESM.Application.Teachers.Commands.Update.UpdateRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            application/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ESM.Application.Common.Models.Result[System.Boolean]'
components:
  schemas:
    ESM.Application.Auth.Commands.ChangePassword.ChangePasswordCommand:
      type: object
      properties:
        oldPassword:
          type: string
        newPassword:
          type: string
      additionalProperties: false
    ESM.Application.Auth.Commands.Login.LoginCommand:
      type: object
      properties:
        userName:
          type: string
        password:
          type: string
      additionalProperties: false
    ESM.Application.Auth.Queries.MySummaryInfo.InternalDepartment:
      type: object
      properties:
        id:
          type: string
          format: uuid
        faculty:
          allOf:
            - $ref: '#/components/schemas/ESM.Application.Auth.Queries.MySummaryInfo.InternalFaculty'
          nullable: true
      additionalProperties: false
    ESM.Application.Auth.Queries.MySummaryInfo.InternalFaculty:
      type: object
      properties:
        id:
          type: string
          format: uuid
        displayId:
          type: string
          nullable: true
        name:
          type: string
      additionalProperties: false
    ESM.Application.Auth.Queries.MySummaryInfo.MySummaryInfoDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        fullName:
          type: string
          nullable: true
        isMale:
          type: boolean
          nullable: true
        department:
          allOf:
            - $ref: '#/components/schemas/ESM.Application.Auth.Queries.MySummaryInfo.InternalDepartment'
          nullable: true
        faculty:
          allOf:
            - $ref: '#/components/schemas/ESM.Application.Auth.Queries.MySummaryInfo.InternalFaculty'
          nullable: true
        roles:
          type: array
          items:
            type: string
        phoneNumber:
          type: string
          nullable: true
      additionalProperties: false
    ESM.Application.Common.Models.Error:
      type: object
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/System.Net.HttpStatusCode'
          description: "\n\n100 = Continue\n\n101 = SwitchingProtocols\n\n102 = Processing\n\n103 = EarlyHints\n\n200 = OK\n\n201 = Created\n\n202 = Accepted\n\n203 = NonAuthoritativeInformation\n\n204 = NoContent\n\n205 = ResetContent\n\n206 = PartialContent\n\n207 = MultiStatus\n\n208 = AlreadyReported\n\n226 = IMUsed\n\n300 = Ambiguous\n\n301 = Moved\n\n302 = Redirect\n\n303 = RedirectMethod\n\n304 = NotModified\n\n305 = UseProxy\n\n306 = Unused\n\n307 = RedirectKeepVerb\n\n308 = PermanentRedirect\n\n400 = BadRequest\n\n401 = Unauthorized\n\n402 = PaymentRequired\n\n403 = Forbidden\n\n404 = NotFound\n\n405 = MethodNotAllowed\n\n406 = NotAcceptable\n\n407 = ProxyAuthenticationRequired\n\n408 = RequestTimeout\n\n409 = Conflict\n\n410 = Gone\n\n411 = LengthRequired\n\n412 = PreconditionFailed\n\n413 = RequestEntityTooLarge\n\n414 = RequestUriTooLong\n\n415 = UnsupportedMediaType\n\n416 = RequestedRangeNotSatisfiable\n\n417 = ExpectationFailed\n\n421 = MisdirectedRequest\n\n422 = UnprocessableEntity\n\n423 = Locked\n\n424 = FailedDependency\n\n426 = UpgradeRequired\n\n428 = PreconditionRequired\n\n429 = TooManyRequests\n\n431 = RequestHeaderFieldsTooLarge\n\n451 = UnavailableForLegalReasons\n\n500 = InternalServerError\n\n501 = NotImplemented\n\n502 = BadGateway\n\n503 = ServiceUnavailable\n\n504 = GatewayTimeout\n\n505 = HttpVersionNotSupported\n\n506 = VariantAlsoNegotiates\n\n507 = InsufficientStorage\n\n508 = LoopDetected\n\n510 = NotExtended\n\n511 = NetworkAuthenticationRequired"
          nullable: true
          readOnly: true
        message:
          type: string
        property:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    'ESM.Application.Common.Models.Result[ESM.Application.Auth.Queries.MySummaryInfo.MySummaryInfoDto]':
      type: object
      properties:
        data:
          allOf:
            - $ref: '#/components/schemas/ESM.Application.Auth.Queries.MySummaryInfo.MySummaryInfoDto'
        success:
          type: boolean
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Application.Common.Models.Error'
          nullable: true
      additionalProperties: false
    'ESM.Application.Common.Models.Result[ESM.Application.Examinations.Queries.GetAvailableInvigilatorsInGroups.GetAvailableInvigilatorsInGroupsDto]':
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ESM.Application.Examinations.Queries.GetAvailableInvigilatorsInGroups.GetAvailableInvigilatorsInGroupsItem.ResponseItem'
        success:
          type: boolean
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Application.Common.Models.Error'
          nullable: true
      additionalProperties: false
    'ESM.Application.Common.Models.Result[ESM.Application.Groups.Commands.AssignInvigilatorsNumberToFaculty.AssignInvigilatorsNumberToFacultyDto]':
      type: object
      properties:
        data:
          allOf:
            - $ref: '#/components/schemas/ESM.Application.Groups.Commands.AssignInvigilatorsNumberToFaculty.AssignInvigilatorsNumberToFacultyDto'
        success:
          type: boolean
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Application.Common.Models.Error'
          nullable: true
      additionalProperties: false
    'ESM.Application.Common.Models.Result[ESM.Domain.Dtos.Examination.ExaminationSummary]':
      type: object
      properties:
        data:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Dtos.Examination.ExaminationSummary'
        success:
          type: boolean
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Application.Common.Models.Error'
          nullable: true
      additionalProperties: false
    'ESM.Application.Common.Models.Result[ESM.Domain.Dtos.Faculty.FacultySummary]':
      type: object
      properties:
        data:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Dtos.Faculty.FacultySummary'
        success:
          type: boolean
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Application.Common.Models.Error'
          nullable: true
      additionalProperties: false
    'ESM.Application.Common.Models.Result[ESM.Domain.Dtos.GeneratedToken]':
      type: object
      properties:
        data:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Dtos.GeneratedToken'
        success:
          type: boolean
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Application.Common.Models.Error'
          nullable: true
      additionalProperties: false
    'ESM.Application.Common.Models.Result[System.Boolean]':
      type: object
      properties:
        data:
          type: boolean
        success:
          type: boolean
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Application.Common.Models.Error'
          nullable: true
      additionalProperties: false
    'ESM.Application.Common.Models.Result[System.Collections.Generic.IEnumerable[ESM.Application.Teachers.Queries.Get.GetDto]]':
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Application.Teachers.Queries.Get.GetDto'
        success:
          type: boolean
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Application.Common.Models.Error'
          nullable: true
      additionalProperties: false
    'ESM.Application.Common.Models.Result[System.Collections.Generic.IEnumerable[ESM.Domain.Dtos.User.UserSummary]]':
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Domain.Dtos.User.UserSummary'
        success:
          type: boolean
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Application.Common.Models.Error'
          nullable: true
      additionalProperties: false
    'ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Application.Examinations.Queries.GetAllGroups.GetAllGroupsDto]]':
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Application.Examinations.Queries.GetAllGroups.GetAllGroupsDto'
        success:
          type: boolean
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Application.Common.Models.Error'
          nullable: true
      additionalProperties: false
    'ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Application.Examinations.Queries.GetAllShifts.GetAllShiftDto]]':
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Application.Examinations.Queries.GetAllShifts.GetAllShiftDto'
        success:
          type: boolean
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Application.Common.Models.Error'
          nullable: true
      additionalProperties: false
    'ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Application.Examinations.Queries.GetAllShiftsDetails.ShiftDetailsDto]]':
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Application.Examinations.Queries.GetAllShiftsDetails.ShiftDetailsDto'
        success:
          type: boolean
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Application.Common.Models.Error'
          nullable: true
      additionalProperties: false
    'ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Application.Examinations.Queries.GetGroupsByFacultyId.GetGroupsByFacultyIdDto]]':
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Application.Examinations.Queries.GetGroupsByFacultyId.GetGroupsByFacultyIdDto'
        success:
          type: boolean
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Application.Common.Models.Error'
          nullable: true
      additionalProperties: false
    'ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Application.Examinations.Queries.GetHandoverData.HandoverDataDto]]':
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Application.Examinations.Queries.GetHandoverData.HandoverDataDto'
        success:
          type: boolean
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Application.Common.Models.Error'
          nullable: true
      additionalProperties: false
    'ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Application.Examinations.Queries.GetRelatedExaminations.RelatedExaminationDto]]':
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Application.Examinations.Queries.GetRelatedExaminations.RelatedExaminationDto'
        success:
          type: boolean
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Application.Common.Models.Error'
          nullable: true
      additionalProperties: false
    'ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Application.Faculties.Queries.GetAll.GetAllDto]]':
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Application.Faculties.Queries.GetAll.GetAllDto'
        success:
          type: boolean
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Application.Common.Models.Error'
          nullable: true
      additionalProperties: false
    'ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Domain.Dtos.User.UserSummary]]':
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Domain.Dtos.User.UserSummary'
        success:
          type: boolean
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Application.Common.Models.Error'
          nullable: true
      additionalProperties: false
    'ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Domain.Entities.ExaminationData]]':
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Domain.Entities.ExaminationData'
        success:
          type: boolean
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Application.Common.Models.Error'
          nullable: true
      additionalProperties: false
    'ESM.Application.Common.Models.Result[System.Collections.Generic.List[ESM.Domain.Entities.ExaminationEvent]]':
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Domain.Entities.ExaminationEvent'
        success:
          type: boolean
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Application.Common.Models.Error'
          nullable: true
      additionalProperties: false
    'ESM.Application.Common.Models.Result[System.Guid]':
      type: object
      properties:
        data:
          type: string
          format: uuid
        success:
          type: boolean
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Application.Common.Models.Error'
          nullable: true
      additionalProperties: false
    ESM.Application.Departments.Commands.CreateDepartment.CreateDepartmentCommand:
      type: object
      properties:
        displayId:
          type: string
          nullable: true
        name:
          type: string
        facultyId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    ESM.Application.Departments.Commands.CreateUserInDepartment.CreateUserInDepartmentCommand:
      type: object
      properties:
        departmentId:
          type: string
        email:
          type: string
        teacherId:
          type: string
          nullable: true
        fullName:
          type: string
        isMale:
          type: boolean
        phoneNumber:
          type: string
          nullable: true
      additionalProperties: false
    ESM.Application.Departments.Commands.ImportDepartment.ImportDepartmentCommand:
      type: object
      properties:
        files:
          type: array
          items:
            type: string
            format: binary
      additionalProperties: false
    ESM.Application.Departments.Commands.UpdateDepartment.UpdateDepartmentCommand:
      type: object
      properties:
        departmentId:
          type: string
        displayId:
          type: string
        name:
          type: string
        facultyId:
          type: string
      additionalProperties: false
    ESM.Application.Examinations.Commands.ChangeStatus.ChangeStatusRequest:
      type: object
      properties:
        status:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Enums.ExaminationStatus'
          description: "\n\n0 = None\n\n1 = Idle\n\n2 = Setup\n\n4 = AssignFaculty\n\n8 = AssignInvigilator\n\n16 = Closed"
          x-enum-varnames:
            - None
            - Idle
            - Setup
            - AssignFaculty
            - AssignInvigilator
            - Closed
        createdAt:
          type: string
          format: date-time
      additionalProperties: false
    ESM.Application.Examinations.Commands.Create.CreateCommand:
      type: object
      properties:
        displayId:
          type: string
          nullable: true
        name:
          type: string
        description:
          type: string
          nullable: true
        expectStartAt:
          type: string
          format: date-time
          nullable: true
        expectEndAt:
          type: string
          format: date-time
          nullable: true
        createdAt:
          type: string
          format: date-time
      additionalProperties: false
    ESM.Application.Examinations.Commands.Update.UpdateCommand:
      type: object
      properties:
        examinationId:
          type: string
        displayId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        expectStartAt:
          type: string
          format: date-time
          nullable: true
        expectEndAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    ESM.Application.Examinations.Commands.UpdateTeacherAssignment.UpdateTeacherAssignmentDto:
      type: object
      properties:
        departmentId:
          type: string
          nullable: true
        userId:
          type: string
          nullable: true
        temporaryInvigilatorName:
          type: string
          nullable: true
      additionalProperties: false
    ESM.Application.Examinations.Queries.GetAllGroups.GetAllGroupsDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        method:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Enums.ExamMethod'
          description: "\n\n0 = Select\n\n1 = Write\n\n2 = Practice\n\n3 = Oral\n\n4 = Report1\n\n5 = Report2"
          x-enum-varnames:
            - Select
            - Write
            - Practice
            - Oral
            - Report1
            - Report2
        invigilatorsCount:
          type: integer
          format: int32
        roomsCount:
          type: integer
          format: int32
        startAt:
          type: string
          format: date-time
        shift:
          type: integer
          format: int32
          nullable: true
        departmentAssign:
          type: boolean
        module:
          allOf:
            - $ref: '#/components/schemas/ESM.Application.Examinations.Queries.GetAllGroups.GetAllGroupsDto.InternalModule'
        assignNumerate:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ESM.Domain.Dtos.Examination.ShiftGroupDataCell'
      additionalProperties: false
    ESM.Application.Examinations.Queries.GetAllGroups.GetAllGroupsDto.InternalFaculty:
      type: object
      properties:
        name:
          type: string
      additionalProperties: false
    ESM.Application.Examinations.Queries.GetAllGroups.GetAllGroupsDto.InternalModule:
      type: object
      properties:
        displayId:
          type: string
        name:
          type: string
        faculty:
          allOf:
            - $ref: '#/components/schemas/ESM.Application.Examinations.Queries.GetAllGroups.GetAllGroupsDto.InternalFaculty'
      additionalProperties: false
    ESM.Application.Examinations.Queries.GetAllShifts.GetAllShiftDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        examsCount:
          type: integer
          format: int32
        candidatesCount:
          type: integer
          format: int32
        invigilatorsCount:
          type: integer
          format: int32
        room:
          allOf:
            - $ref: '#/components/schemas/ESM.Application.Examinations.Queries.GetAllShifts.GetAllShiftDto.InternalRoom'
        shiftGroup:
          allOf:
            - $ref: '#/components/schemas/ESM.Application.Examinations.Queries.GetAllShifts.GetAllShiftDto.InternalShiftGroup'
      additionalProperties: false
    ESM.Application.Examinations.Queries.GetAllShifts.GetAllShiftDto.InternalModule:
      type: object
      properties:
        displayId:
          type: string
        name:
          type: string
        credits:
          type: integer
          format: int32
      additionalProperties: false
    ESM.Application.Examinations.Queries.GetAllShifts.GetAllShiftDto.InternalRoom:
      type: object
      properties:
        displayId:
          type: string
      additionalProperties: false
    ESM.Application.Examinations.Queries.GetAllShifts.GetAllShiftDto.InternalShiftGroup:
      type: object
      properties:
        id:
          type: string
          format: uuid
        method:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Enums.ExamMethod'
          description: "\n\n0 = Select\n\n1 = Write\n\n2 = Practice\n\n3 = Oral\n\n4 = Report1\n\n5 = Report2"
          x-enum-varnames:
            - Select
            - Write
            - Practice
            - Oral
            - Report1
            - Report2
        startAt:
          type: string
          format: date-time
        shift:
          type: integer
          format: int32
          nullable: true
        departmentAssign:
          type: boolean
        module:
          allOf:
            - $ref: '#/components/schemas/ESM.Application.Examinations.Queries.GetAllShifts.GetAllShiftDto.InternalModule'
      additionalProperties: false
    ESM.Application.Examinations.Queries.GetAllShiftsDetails.ShiftDetailsDto:
      type: object
      properties:
        shiftGroup:
          allOf:
            - $ref: '#/components/schemas/ESM.Application.Examinations.Queries.GetAllShiftsDetails.ShiftDetailsDto.InternalShiftGroup'
        room:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Dtos.Room.RoomSummary'
        candidatesCount:
          type: integer
          format: int32
        invigilatorShift:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Application.Examinations.Queries.GetAllShiftsDetails.ShiftDetailsDto.InternalInvigilatorShift'
        isDuplicated:
          type: boolean
      additionalProperties: false
    ESM.Application.Examinations.Queries.GetAllShiftsDetails.ShiftDetailsDto.InternalDepartment:
      type: object
      properties:
        displayId:
          type: string
          nullable: true
        name:
          type: string
        faculty:
          allOf:
            - $ref: '#/components/schemas/ESM.Application.Examinations.Queries.GetAllShiftsDetails.ShiftDetailsDto.InternalFaculty'
          nullable: true
      additionalProperties: false
    ESM.Application.Examinations.Queries.GetAllShiftsDetails.ShiftDetailsDto.InternalFaculty:
      type: object
      properties:
        displayId:
          type: string
          nullable: true
        name:
          type: string
      additionalProperties: false
    ESM.Application.Examinations.Queries.GetAllShiftsDetails.ShiftDetailsDto.InternalInvigilatorShift:
      type: object
      properties:
        id:
          type: string
          format: uuid
        orderIndex:
          type: integer
          format: int32
        invigilator:
          allOf:
            - $ref: '#/components/schemas/ESM.Application.Examinations.Queries.GetAllShiftsDetails.ShiftDetailsDto.InternalTeacher'
          nullable: true
      additionalProperties: false
    ESM.Application.Examinations.Queries.GetAllShiftsDetails.ShiftDetailsDto.InternalShiftGroup:
      type: object
      properties:
        id:
          type: string
          format: uuid
        method:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Enums.ExamMethod'
          description: "\n\n0 = Select\n\n1 = Write\n\n2 = Practice\n\n3 = Oral\n\n4 = Report1\n\n5 = Report2"
          x-enum-varnames:
            - Select
            - Write
            - Practice
            - Oral
            - Report1
            - Report2
        startAt:
          type: string
          format: date-time
        shift:
          type: integer
          format: int32
          nullable: true
        departmentAssign:
          type: boolean
        module:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Dtos.Module.ModuleSimple'
      additionalProperties: false
    ESM.Application.Examinations.Queries.GetAllShiftsDetails.ShiftDetailsDto.InternalTeacher:
      type: object
      properties:
        id:
          type: string
          format: uuid
        fullName:
          type: string
        invigilatorId:
          type: string
          nullable: true
        department:
          allOf:
            - $ref: '#/components/schemas/ESM.Application.Examinations.Queries.GetAllShiftsDetails.ShiftDetailsDto.InternalDepartment'
          nullable: true
      additionalProperties: false
    ESM.Application.Examinations.Queries.GetAvailableInvigilatorsInGroups.GetAvailableInvigilatorsInGroupsItem.ResponseItem:
      type: object
      properties:
        isPriority:
          type: boolean
      additionalProperties: false
    ESM.Application.Examinations.Queries.GetGroupsByFacultyId.GetGroupsByFacultyIdDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        departmentId:
          type: string
          format: uuid
          nullable: true
        user:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Dtos.User.UserSimple'
          nullable: true
        temporaryInvigilatorName:
          type: string
          nullable: true
        facultyShiftGroup:
          allOf:
            - $ref: '#/components/schemas/ESM.Application.Examinations.Queries.GetGroupsByFacultyId.GetGroupsByFacultyIdDto.InternalFacultyShiftGroup'
      additionalProperties: false
    ESM.Application.Examinations.Queries.GetGroupsByFacultyId.GetGroupsByFacultyIdDto.InternalFacultyShiftGroup:
      type: object
      properties:
        id:
          type: string
          format: uuid
        shiftGroup:
          allOf:
            - $ref: '#/components/schemas/ESM.Application.Examinations.Queries.GetGroupsByFacultyId.GetGroupsByFacultyIdDto.InternalShiftGroup'
      additionalProperties: false
    ESM.Application.Examinations.Queries.GetGroupsByFacultyId.GetGroupsByFacultyIdDto.InternalModule:
      type: object
      properties:
        displayId:
          type: string
        name:
          type: string
      additionalProperties: false
    ESM.Application.Examinations.Queries.GetGroupsByFacultyId.GetGroupsByFacultyIdDto.InternalShiftGroup:
      type: object
      properties:
        startAt:
          type: string
          format: date-time
        shift:
          type: integer
          format: int32
          nullable: true
        module:
          allOf:
            - $ref: '#/components/schemas/ESM.Application.Examinations.Queries.GetGroupsByFacultyId.GetGroupsByFacultyIdDto.InternalModule'
      additionalProperties: false
    ESM.Application.Examinations.Queries.GetHandoverData.HandoverDataDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        shiftGroup:
          allOf:
            - $ref: '#/components/schemas/ESM.Application.Examinations.Queries.GetHandoverData.HandoverDataDto.InternalShiftGroup'
        room:
          allOf:
            - $ref: '#/components/schemas/ESM.Application.Examinations.Queries.GetHandoverData.HandoverDataDto.InternalRoom'
        invigilatorShift:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Application.Examinations.Queries.GetHandoverData.HandoverDataDto.InternalInvigilatorShift'
        handedOverUserId:
          type: string
          format: uuid
          nullable: true
        report:
          type: string
          nullable: true
      additionalProperties: false
    ESM.Application.Examinations.Queries.GetHandoverData.HandoverDataDto.InternalDepartment:
      type: object
      properties:
        displayId:
          type: string
          nullable: true
        name:
          type: string
        faculty:
          allOf:
            - $ref: '#/components/schemas/ESM.Application.Examinations.Queries.GetHandoverData.HandoverDataDto.InternalFaculty'
          nullable: true
      additionalProperties: false
    ESM.Application.Examinations.Queries.GetHandoverData.HandoverDataDto.InternalFaculty:
      type: object
      properties:
        displayId:
          type: string
          nullable: true
        name:
          type: string
      additionalProperties: false
    ESM.Application.Examinations.Queries.GetHandoverData.HandoverDataDto.InternalInvigilatorShift:
      type: object
      properties:
        id:
          type: string
          format: uuid
        orderIndex:
          type: integer
          format: int32
        invigilator:
          allOf:
            - $ref: '#/components/schemas/ESM.Application.Examinations.Queries.GetHandoverData.HandoverDataDto.InternalUser'
          nullable: true
      additionalProperties: false
    ESM.Application.Examinations.Queries.GetHandoverData.HandoverDataDto.InternalModule:
      type: object
      properties:
        displayId:
          type: string
        name:
          type: string
        faculty:
          allOf:
            - $ref: '#/components/schemas/ESM.Application.Examinations.Queries.GetHandoverData.HandoverDataDto.InternalFaculty'
      additionalProperties: false
    ESM.Application.Examinations.Queries.GetHandoverData.HandoverDataDto.InternalRoom:
      type: object
      properties:
        displayId:
          type: string
      additionalProperties: false
    ESM.Application.Examinations.Queries.GetHandoverData.HandoverDataDto.InternalShiftGroup:
      type: object
      properties:
        id:
          type: string
          format: uuid
        method:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Enums.ExamMethod'
          description: "\n\n0 = Select\n\n1 = Write\n\n2 = Practice\n\n3 = Oral\n\n4 = Report1\n\n5 = Report2"
          x-enum-varnames:
            - Select
            - Write
            - Practice
            - Oral
            - Report1
            - Report2
        startAt:
          type: string
          format: date-time
        shift:
          type: integer
          format: int32
          nullable: true
        departmentAssign:
          type: boolean
        module:
          allOf:
            - $ref: '#/components/schemas/ESM.Application.Examinations.Queries.GetHandoverData.HandoverDataDto.InternalModule'
      additionalProperties: false
    ESM.Application.Examinations.Queries.GetHandoverData.HandoverDataDto.InternalUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
        fullName:
          type: string
        invigilatorId:
          type: string
          nullable: true
        department:
          allOf:
            - $ref: '#/components/schemas/ESM.Application.Examinations.Queries.GetHandoverData.HandoverDataDto.InternalDepartment'
          nullable: true
      additionalProperties: false
    ESM.Application.Examinations.Queries.GetRelatedExaminations.RelatedExaminationDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        displayId:
          type: string
        name:
          type: string
      additionalProperties: false
    ESM.Application.Faculties.Commands.Create.CreateCommand:
      type: object
      properties:
        displayId:
          type: string
          nullable: true
        name:
          type: string
      additionalProperties: false
    ESM.Application.Faculties.Commands.Update.UpdateRequest:
      type: object
      properties:
        displayId:
          type: string
        name:
          type: string
      additionalProperties: false
    ESM.Application.Faculties.Queries.GetAll.GetAllDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        displayId:
          type: string
          nullable: true
        name:
          type: string
        departments:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Application.Faculties.Queries.GetAll.GetAllDto.InternalDepartment'
      additionalProperties: false
    ESM.Application.Faculties.Queries.GetAll.GetAllDto.InternalDepartment:
      type: object
      properties:
        id:
          type: string
          format: uuid
        displayId:
          type: string
          nullable: true
        name:
          type: string
      additionalProperties: false
    ESM.Application.Groups.Commands.AssignInvigilatorsNumberToFaculty.AssignInvigilatorsNumberToFacultyDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        method:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Enums.ExamMethod'
          description: "\n\n0 = Select\n\n1 = Write\n\n2 = Practice\n\n3 = Oral\n\n4 = Report1\n\n5 = Report2"
          x-enum-varnames:
            - Select
            - Write
            - Practice
            - Oral
            - Report1
            - Report2
        invigilatorsCount:
          type: integer
          format: int32
        roomsCount:
          type: integer
          format: int32
        startAt:
          type: string
          format: date-time
        shift:
          type: integer
          format: int32
          nullable: true
        departmentAssign:
          type: boolean
        module:
          allOf:
            - $ref: '#/components/schemas/ESM.Application.Groups.Commands.AssignInvigilatorsNumberToFaculty.AssignInvigilatorsNumberToFacultyDto.InternalModule'
        assignNumerate:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ESM.Domain.Dtos.Examination.ShiftGroupDataCell'
      additionalProperties: false
    ESM.Application.Groups.Commands.AssignInvigilatorsNumberToFaculty.AssignInvigilatorsNumberToFacultyDto.InternalFaculty:
      type: object
      properties:
        name:
          type: string
      additionalProperties: false
    ESM.Application.Groups.Commands.AssignInvigilatorsNumberToFaculty.AssignInvigilatorsNumberToFacultyDto.InternalModule:
      type: object
      properties:
        displayId:
          type: string
        name:
          type: string
        faculty:
          allOf:
            - $ref: '#/components/schemas/ESM.Application.Groups.Commands.AssignInvigilatorsNumberToFaculty.AssignInvigilatorsNumberToFacultyDto.InternalFaculty'
      additionalProperties: false
    ESM.Application.Groups.Commands.UpdateTemporaryNameToTeacher.UpdateTemporaryNameToTeacherRequest:
      type: object
      properties:
        userId:
          type: string
      additionalProperties: false
    ESM.Application.Modules.Commands.Create.CreateCommand:
      type: object
      properties:
        displayId:
          type: string
        name:
          type: string
        facultyId:
          type: string
        departmentId:
          type: string
          nullable: true
      additionalProperties: false
    ESM.Application.Modules.Commands.Import.ImportCommand:
      type: object
      properties:
        files:
          type: array
          items:
            type: string
            format: binary
      additionalProperties: false
    ESM.Application.Rooms.Commands.Create.CreateCommand:
      type: object
      properties:
        displayId:
          type: string
        capacity:
          type: integer
          format: int32
      additionalProperties: false
    ESM.Application.Shifts.Commands.Update.UpdateRequest:
      type: object
      properties:
        handoverTeacherId:
          type: string
          nullable: true
        report:
          type: string
          nullable: true
      additionalProperties: false
    ESM.Application.Teachers.Commands.Update.UpdateRequest:
      type: object
      properties:
        email:
          type: string
        teacherId:
          type: string
          nullable: true
        fullName:
          type: string
        isMale:
          type: boolean
        departmentId:
          type: string
          nullable: true
      additionalProperties: false
    ESM.Application.Teachers.Queries.Get.GetDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        fullName:
          type: string
        userName:
          type: string
        email:
          type: string
          nullable: true
        isMale:
          type: boolean
        createdAt:
          type: string
          format: date-time
        invigilatorId:
          type: string
          nullable: true
        department:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Dtos.Department.DepartmentSummary'
          nullable: true
        faculty:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Dtos.Faculty.FacultySummary'
          nullable: true
        phoneNumber:
          type: string
          nullable: true
      additionalProperties: false
    ESM.Domain.Common.BaseEvent:
      type: object
      additionalProperties: false
    ESM.Domain.Dtos.Department.DepartmentSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        displayId:
          type: string
          nullable: true
        name:
          type: string
        faculty:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Dtos.Faculty.FacultySummary'
          nullable: true
      additionalProperties: false
    ESM.Domain.Dtos.Examination.ExaminationSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        displayId:
          type: string
        name:
          type: string
        description:
          type: string
          nullable: true
        expectStartAt:
          type: string
          format: date-time
          nullable: true
        expectEndAt:
          type: string
          format: date-time
          nullable: true
        status:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Enums.ExaminationStatus'
          description: "\n\n0 = None\n\n1 = Idle\n\n2 = Setup\n\n4 = AssignFaculty\n\n8 = AssignInvigilator\n\n16 = Closed"
          x-enum-varnames:
            - None
            - Idle
            - Setup
            - AssignFaculty
            - AssignInvigilator
            - Closed
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          nullable: true
        createdBy:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Dtos.User.UserSummary'
      additionalProperties: false
    ESM.Domain.Dtos.Examination.ShiftGroupDataCell:
      type: object
      properties:
        actual:
          type: integer
          format: int32
        calculated:
          type: integer
          format: int32
        maximum:
          type: integer
          format: int32
      additionalProperties: false
    ESM.Domain.Dtos.Faculty.FacultySummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        displayId:
          type: string
          nullable: true
        name:
          type: string
      additionalProperties: false
    ESM.Domain.Dtos.GeneratedToken:
      type: object
      properties:
        token:
          type: string
        expiration:
          type: string
          format: date-time
      additionalProperties: false
    ESM.Domain.Dtos.Module.ModuleSimple:
      type: object
      properties:
        id:
          type: string
          format: uuid
        displayId:
          type: string
        name:
          type: string
        credits:
          type: integer
          format: int32
        faculty:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Dtos.Faculty.FacultySummary'
      additionalProperties: false
    ESM.Domain.Dtos.Room.RoomSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        displayId:
          type: string
        capacity:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    ESM.Domain.Dtos.User.UserSimple:
      type: object
      properties:
        id:
          type: string
          format: uuid
        fullName:
          type: string
        email:
          type: string
        isMale:
          type: boolean
        createdAt:
          type: string
          format: date-time
        invigilatorId:
          type: string
          nullable: true
      additionalProperties: false
    ESM.Domain.Dtos.User.UserSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        fullName:
          type: string
        userName:
          type: string
        email:
          type: string
          nullable: true
        isMale:
          type: boolean
        createdAt:
          type: string
          format: date-time
        invigilatorId:
          type: string
          nullable: true
        department:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Dtos.Department.DepartmentSummary'
          nullable: true
        faculty:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Dtos.Faculty.FacultySummary'
          nullable: true
        role:
          type: string
        phoneNumber:
          type: string
          nullable: true
      additionalProperties: false
    ESM.Domain.Entities.Candidate:
      type: object
      properties:
        id:
          type: string
          format: uuid
        displayId:
          type: string
        name:
          type: string
        isStudent:
          type: boolean
        updatedAt:
          type: string
          format: date-time
        candidateShift:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Domain.Entities.CandidateShift'
        examinationModules:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Domain.Entities.CandidateExaminationModule'
      additionalProperties: false
    ESM.Domain.Entities.CandidateExaminationModule:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
          nullable: true
        examinationId:
          type: string
          format: uuid
        examination:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Entities.Examination'
        candidateId:
          type: string
          format: uuid
        candidate:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Entities.Candidate'
        moduleId:
          type: string
          format: uuid
        module:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Entities.Module'
      additionalProperties: false
    ESM.Domain.Entities.CandidateShift:
      type: object
      properties:
        id:
          type: string
          format: uuid
        orderIndex:
          type: integer
          format: int32
        candidateId:
          type: string
          format: uuid
        candidate:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Entities.Candidate'
        shiftId:
          type: string
          format: uuid
        shift:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Entities.Shift'
      additionalProperties: false
    ESM.Domain.Entities.Department:
      type: object
      properties:
        id:
          type: string
          format: uuid
        domainEvents:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Domain.Common.BaseEvent'
          readOnly: true
        created:
          type: string
          format: date-time
        createdBy:
          type: string
          format: uuid
          nullable: true
        lastModified:
          type: string
          format: date-time
          nullable: true
        lastModifiedBy:
          type: string
          format: uuid
          nullable: true
        displayId:
          type: string
          nullable: true
        name:
          type: string
        facultyId:
          type: string
          format: uuid
          nullable: true
        faculty:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Entities.Faculty'
          nullable: true
        teachers:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Domain.Entities.Teacher'
        departmentShiftGroups:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Domain.Entities.DepartmentShiftGroup'
      additionalProperties: false
    ESM.Domain.Entities.DepartmentShiftGroup:
      type: object
      properties:
        id:
          type: string
          format: uuid
        departmentId:
          type: string
          format: uuid
          nullable: true
        department:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Entities.Department'
          nullable: true
        userId:
          type: string
          format: uuid
          nullable: true
        user:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Identity.ApplicationUser'
          nullable: true
        temporaryInvigilatorName:
          type: string
          nullable: true
        facultyShiftGroupId:
          type: string
          format: uuid
        facultyShiftGroup:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Entities.FacultyShiftGroup'
      additionalProperties: false
    ESM.Domain.Entities.Examination:
      type: object
      properties:
        id:
          type: string
          format: uuid
        domainEvents:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Domain.Common.BaseEvent'
          readOnly: true
        created:
          type: string
          format: date-time
        createdBy:
          type: string
          format: uuid
          nullable: true
        lastModified:
          type: string
          format: date-time
          nullable: true
        lastModifiedBy:
          type: string
          format: uuid
          nullable: true
        displayId:
          type: string
          nullable: true
        name:
          type: string
        description:
          type: string
          nullable: true
        expectStartAt:
          type: string
          format: date-time
          nullable: true
        expectEndAt:
          type: string
          format: date-time
          nullable: true
        status:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Enums.ExaminationStatus'
          description: "\n\n0 = None\n\n1 = Idle\n\n2 = Setup\n\n4 = AssignFaculty\n\n8 = AssignInvigilator\n\n16 = Closed"
          x-enum-varnames:
            - None
            - Idle
            - Setup
            - AssignFaculty
            - AssignInvigilator
            - Closed
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          nullable: true
        shiftGroups:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Domain.Entities.ShiftGroup'
        candidatesOfModule:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Domain.Entities.CandidateExaminationModule'
        events:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Domain.Entities.ExaminationEvent'
      additionalProperties: false
    ESM.Domain.Entities.ExaminationData:
      type: object
      properties:
        id:
          type: string
          format: uuid
        moduleId:
          type: string
          nullable: true
        moduleName:
          type: string
          nullable: true
        moduleClass:
          type: string
          nullable: true
        credit:
          type: integer
          format: int32
          nullable: true
        method:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Enums.ExamMethod'
          description: "\n\n0 = Select\n\n1 = Write\n\n2 = Practice\n\n3 = Oral\n\n4 = Report1\n\n5 = Report2"
          nullable: true
        date:
          type: string
          format: date-time
          nullable: true
        startAt:
          type: string
          format: date-time
          nullable: true
        endAt:
          type: string
          format: date-time
          nullable: true
        shift:
          type: integer
          format: int32
          nullable: true
        candidatesCount:
          type: integer
          format: int32
          nullable: true
        roomsCount:
          type: integer
          format: int32
          nullable: true
        rooms:
          type: string
          nullable: true
        faculty:
          type: string
          nullable: true
        department:
          type: string
          nullable: true
        departmentAssign:
          type: boolean
          nullable: true
        examinationId:
          type: string
          format: uuid
        examination:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Entities.Examination'
        errors:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ESM.Domain.Entities.ExaminationDataError'
        suggestions:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/System.Collections.Generic.KeyValuePair[System.String,System.String]'
            nullable: true
      additionalProperties: false
    ESM.Domain.Entities.ExaminationDataError:
      type: object
      properties:
        message:
          type: string
      additionalProperties: false
    ESM.Domain.Entities.ExaminationEvent:
      type: object
      properties:
        id:
          type: string
          format: uuid
        status:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Enums.ExaminationStatus'
          description: "\n\n0 = None\n\n1 = Idle\n\n2 = Setup\n\n4 = AssignFaculty\n\n8 = AssignInvigilator\n\n16 = Closed"
          x-enum-varnames:
            - None
            - Idle
            - Setup
            - AssignFaculty
            - AssignInvigilator
            - Closed
        createAt:
          type: string
          format: date-time
        examinationId:
          type: string
          format: uuid
        examination:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Entities.Examination'
      additionalProperties: false
    ESM.Domain.Entities.Faculty:
      type: object
      properties:
        id:
          type: string
          format: uuid
        domainEvents:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Domain.Common.BaseEvent'
          readOnly: true
        created:
          type: string
          format: date-time
        createdBy:
          type: string
          format: uuid
          nullable: true
        lastModified:
          type: string
          format: date-time
          nullable: true
        lastModifiedBy:
          type: string
          format: uuid
          nullable: true
        displayId:
          type: string
          nullable: true
        name:
          type: string
        teachers:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Domain.Entities.Teacher'
        departments:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Domain.Entities.Department'
        facultyShiftGroups:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Domain.Entities.FacultyShiftGroup'
      additionalProperties: false
    ESM.Domain.Entities.FacultyShiftGroup:
      type: object
      properties:
        id:
          type: string
          format: uuid
        invigilatorsCount:
          type: integer
          format: int32
        calculatedInvigilatorsCount:
          type: integer
          format: int32
        facultyId:
          type: string
          format: uuid
        faculty:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Entities.Faculty'
        shiftGroupId:
          type: string
          format: uuid
        shiftGroup:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Entities.ShiftGroup'
        departmentShiftGroups:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Domain.Entities.DepartmentShiftGroup'
      additionalProperties: false
    ESM.Domain.Entities.InvigilatorShift:
      type: object
      properties:
        id:
          type: string
          format: uuid
        orderIndex:
          type: integer
          format: int32
        paid:
          type: integer
          format: int32
        invigilator:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Identity.ApplicationUser'
          nullable: true
        invigilatorId:
          type: string
          format: uuid
          nullable: true
        createdAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
          nullable: true
        shiftId:
          type: string
          format: uuid
        shift:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Entities.Shift'
      additionalProperties: false
    ESM.Domain.Entities.Module:
      type: object
      properties:
        id:
          type: string
          format: uuid
        displayId:
          type: string
        name:
          type: string
        credits:
          type: integer
          format: int32
        durationInMinutes:
          type: integer
          format: int32
        facultyId:
          type: string
          format: uuid
        faculty:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Entities.Faculty'
        departmentId:
          type: string
          format: uuid
          nullable: true
        department:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Entities.Department'
          nullable: true
        candidatesOfExamination:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Domain.Entities.CandidateExaminationModule'
      additionalProperties: false
    ESM.Domain.Entities.Room:
      type: object
      properties:
        id:
          type: string
          format: uuid
        displayId:
          type: string
        capacity:
          type: integer
          format: int32
          nullable: true
        shift:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Domain.Entities.Shift'
      additionalProperties: false
    ESM.Domain.Entities.Shift:
      type: object
      properties:
        id:
          type: string
          format: uuid
        examsCount:
          type: integer
          format: int32
        candidatesCount:
          type: integer
          format: int32
        invigilatorsCount:
          type: integer
          format: int32
        report:
          type: string
          nullable: true
        handedOverUserId:
          type: string
          format: uuid
          nullable: true
        handedOverUser:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Identity.ApplicationUser'
          nullable: true
        shiftGroupId:
          type: string
          format: uuid
        shiftGroup:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Entities.ShiftGroup'
        roomId:
          type: string
          format: uuid
          nullable: true
        room:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Entities.Room'
        invigilatorShift:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Domain.Entities.InvigilatorShift'
        candidateShift:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Domain.Entities.CandidateShift'
      additionalProperties: false
    ESM.Domain.Entities.ShiftGroup:
      type: object
      properties:
        id:
          type: string
          format: uuid
        method:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Enums.ExamMethod'
          description: "\n\n0 = Select\n\n1 = Write\n\n2 = Practice\n\n3 = Oral\n\n4 = Report1\n\n5 = Report2"
          x-enum-varnames:
            - Select
            - Write
            - Practice
            - Oral
            - Report1
            - Report2
        invigilatorsCount:
          type: integer
          format: int32
        roomsCount:
          type: integer
          format: int32
        startAt:
          type: string
          format: date-time
        shift:
          type: integer
          format: int32
          nullable: true
        departmentAssign:
          type: boolean
        examinationId:
          type: string
          format: uuid
        examination:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Entities.Examination'
        moduleId:
          type: string
          format: uuid
        module:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Entities.Module'
        shifts:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Domain.Entities.Shift'
        facultyShiftGroups:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Domain.Entities.FacultyShiftGroup'
      additionalProperties: false
    ESM.Domain.Entities.Teacher:
      type: object
      properties:
        id:
          type: string
          format: uuid
        domainEvents:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Domain.Common.BaseEvent'
          readOnly: true
        created:
          type: string
          format: date-time
        createdBy:
          type: string
          format: uuid
          nullable: true
        lastModified:
          type: string
          format: date-time
          nullable: true
        lastModifiedBy:
          type: string
          format: uuid
          nullable: true
        teacherId:
          type: string
          nullable: true
        fullName:
          type: string
        isMale:
          type: boolean
        examinations:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Domain.Entities.Examination'
        invigilatorShifts:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Domain.Entities.InvigilatorShift'
        handedOverShifts:
          type: array
          items:
            $ref: '#/components/schemas/ESM.Domain.Entities.Shift'
        user:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Identity.ApplicationUser'
        userId:
          type: string
          format: uuid
        departmentId:
          type: string
          format: uuid
          nullable: true
        department:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Entities.Department'
          nullable: true
        facultyId:
          type: string
          format: uuid
          nullable: true
        faculty:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Entities.Faculty'
          nullable: true
      additionalProperties: false
    ESM.Domain.Enums.ExamMethod:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
      type: integer
      description: "\n\n0 = Select\n\n1 = Write\n\n2 = Practice\n\n3 = Oral\n\n4 = Report1\n\n5 = Report2"
      format: int32
      x-enum-varnames:
        - Select
        - Write
        - Practice
        - Oral
        - Report1
        - Report2
    ESM.Domain.Enums.ExaminationStatus:
      enum:
        - 0
        - 1
        - 2
        - 4
        - 8
        - 16
      type: integer
      description: "\n\n0 = None\n\n1 = Idle\n\n2 = Setup\n\n4 = AssignFaculty\n\n8 = AssignInvigilator\n\n16 = Closed"
      format: int32
      x-enum-varnames:
        - None
        - Idle
        - Setup
        - AssignFaculty
        - AssignInvigilator
        - Closed
    ESM.Domain.Identity.ApplicationUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userName:
          type: string
          nullable: true
        normalizedUserName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        normalizedEmail:
          type: string
          nullable: true
        emailConfirmed:
          type: boolean
        passwordHash:
          type: string
          nullable: true
        securityStamp:
          type: string
          nullable: true
        concurrencyStamp:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        phoneNumberConfirmed:
          type: boolean
        twoFactorEnabled:
          type: boolean
        lockoutEnd:
          type: string
          format: date-time
          nullable: true
        lockoutEnabled:
          type: boolean
        accessFailedCount:
          type: integer
          format: int32
        teacher:
          allOf:
            - $ref: '#/components/schemas/ESM.Domain.Entities.Teacher'
          nullable: true
      additionalProperties: false
    'System.Collections.Generic.KeyValuePair[System.String,System.String]':
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      additionalProperties: false
    System.Net.HttpStatusCode:
      enum:
        - 100
        - 101
        - 102
        - 103
        - 200
        - 201
        - 202
        - 203
        - 204
        - 205
        - 206
        - 207
        - 208
        - 226
        - 300
        - 301
        - 302
        - 303
        - 304
        - 305
        - 306
        - 307
        - 308
        - 400
        - 401
        - 402
        - 403
        - 404
        - 405
        - 406
        - 407
        - 408
        - 409
        - 410
        - 411
        - 412
        - 413
        - 414
        - 415
        - 416
        - 417
        - 421
        - 422
        - 423
        - 424
        - 426
        - 428
        - 429
        - 431
        - 451
        - 500
        - 501
        - 502
        - 503
        - 504
        - 505
        - 506
        - 507
        - 508
        - 510
        - 511
      type: integer
      description: "\n\n100 = Continue\n\n101 = SwitchingProtocols\n\n102 = Processing\n\n103 = EarlyHints\n\n200 = OK\n\n201 = Created\n\n202 = Accepted\n\n203 = NonAuthoritativeInformation\n\n204 = NoContent\n\n205 = ResetContent\n\n206 = PartialContent\n\n207 = MultiStatus\n\n208 = AlreadyReported\n\n226 = IMUsed\n\n300 = Ambiguous\n\n301 = Moved\n\n302 = Redirect\n\n303 = RedirectMethod\n\n304 = NotModified\n\n305 = UseProxy\n\n306 = Unused\n\n307 = RedirectKeepVerb\n\n308 = PermanentRedirect\n\n400 = BadRequest\n\n401 = Unauthorized\n\n402 = PaymentRequired\n\n403 = Forbidden\n\n404 = NotFound\n\n405 = MethodNotAllowed\n\n406 = NotAcceptable\n\n407 = ProxyAuthenticationRequired\n\n408 = RequestTimeout\n\n409 = Conflict\n\n410 = Gone\n\n411 = LengthRequired\n\n412 = PreconditionFailed\n\n413 = RequestEntityTooLarge\n\n414 = RequestUriTooLong\n\n415 = UnsupportedMediaType\n\n416 = RequestedRangeNotSatisfiable\n\n417 = ExpectationFailed\n\n421 = MisdirectedRequest\n\n422 = UnprocessableEntity\n\n423 = Locked\n\n424 = FailedDependency\n\n426 = UpgradeRequired\n\n428 = PreconditionRequired\n\n429 = TooManyRequests\n\n431 = RequestHeaderFieldsTooLarge\n\n451 = UnavailableForLegalReasons\n\n500 = InternalServerError\n\n501 = NotImplemented\n\n502 = BadGateway\n\n503 = ServiceUnavailable\n\n504 = GatewayTimeout\n\n505 = HttpVersionNotSupported\n\n506 = VariantAlsoNegotiates\n\n507 = InsufficientStorage\n\n508 = LoopDetected\n\n510 = NotExtended\n\n511 = NetworkAuthenticationRequired"
      format: int32
      x-enum-varnames:
        - Continue
        - SwitchingProtocols
        - Processing
        - EarlyHints
        - OK
        - Created
        - Accepted
        - NonAuthoritativeInformation
        - NoContent
        - ResetContent
        - PartialContent
        - MultiStatus
        - AlreadyReported
        - IMUsed
        - Ambiguous
        - Moved
        - Redirect
        - RedirectMethod
        - NotModified
        - UseProxy
        - Unused
        - RedirectKeepVerb
        - PermanentRedirect
        - BadRequest
        - Unauthorized
        - PaymentRequired
        - Forbidden
        - NotFound
        - MethodNotAllowed
        - NotAcceptable
        - ProxyAuthenticationRequired
        - RequestTimeout
        - Conflict
        - Gone
        - LengthRequired
        - PreconditionFailed
        - RequestEntityTooLarge
        - RequestUriTooLong
        - UnsupportedMediaType
        - RequestedRangeNotSatisfiable
        - ExpectationFailed
        - MisdirectedRequest
        - UnprocessableEntity
        - Locked
        - FailedDependency
        - UpgradeRequired
        - PreconditionRequired
        - TooManyRequests
        - RequestHeaderFieldsTooLarge
        - UnavailableForLegalReasons
        - InternalServerError
        - NotImplemented
        - BadGateway
        - ServiceUnavailable
        - GatewayTimeout
        - HttpVersionNotSupported
        - VariantAlsoNegotiates
        - InsufficientStorage
        - LoopDetected
        - NotExtended
        - NetworkAuthenticationRequired
